"""Initial schema for learning pathfinder, scholarships, and finance tracker

Revision ID: 535a44a19fdc
Revises: 
Create Date: 2025-10-17 20:59:51.749203

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '535a44a19fdc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('icon_url', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('domains',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('scholarships',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('provider', sa.String(length=128), nullable=True),
    sa.Column('website_url', sa.String(length=512), nullable=False),
    sa.Column('application_deadline', sa.Date(), nullable=False),
    sa.Column('amount', sa.String(length=64), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('eligible_branches', postgresql.ARRAY(sa.String(length=64)), nullable=True),
    sa.Column('eligible_years', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('eligible_genders', postgresql.ARRAY(sa.String(length=10)), nullable=True),
    sa.Column('required_skills', postgresql.ARRAY(sa.String(length=32)), nullable=True),
    sa.Column('country', sa.String(length=64), nullable=True),
    sa.Column('scholarship_type', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('scholarships', schema=None) as batch_op:
        batch_op.create_index('idx_scholarship_active', ['is_active'], unique=False)
        batch_op.create_index('idx_scholarship_branches', ['eligible_branches'], unique=False, postgresql_using='gin')
        batch_op.create_index('idx_scholarship_deadline', ['application_deadline'], unique=False)
        batch_op.create_index('idx_scholarship_genders', ['eligible_genders'], unique=False, postgresql_using='gin')
        batch_op.create_index('idx_scholarship_skills', ['required_skills'], unique=False, postgresql_using='gin')
        batch_op.create_index('idx_scholarship_years', ['eligible_years'], unique=False, postgresql_using='gin')

    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_user_email', ['email'], unique=False)

    op.create_table('budgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('month', sa.String(length=7), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('budgets', schema=None) as batch_op:
        batch_op.create_index('idx_budget_user_month', ['user_id', 'month'], unique=False)
        batch_op.create_index(batch_op.f('ix_budgets_user_id'), ['user_id'], unique=False)

    op.create_table('finance_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('default_account', sa.String(length=10), nullable=True),
    sa.Column('budget_notifications', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('finance_settings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_finance_settings_user_id'), ['user_id'], unique=True)

    op.create_table('learning_paths',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('domain_id', sa.Integer(), nullable=False),
    sa.Column('current_version', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('learning_paths', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_learning_paths_domain_id'), ['domain_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_paths_user_id'), ['user_id'], unique=False)

    op.create_table('notifications',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('feature', sa.String(length=32), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('source_id', sa.String(length=36), nullable=True),
    sa.Column('source_type', sa.String(length=32), nullable=True),
    sa.Column('action_url', sa.String(length=512), nullable=True),
    sa.Column('action_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index('idx_notification_feature', ['feature'], unique=False)
        batch_op.create_index('idx_notification_read', ['user_id', 'is_read'], unique=False)
        batch_op.create_index('idx_notification_user', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_user_id'), ['user_id'], unique=False)

    op.create_table('scholarship_criteria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scholarship_id', sa.String(length=36), nullable=False),
    sa.Column('min_gpa', sa.Float(), nullable=True),
    sa.Column('min_percentage', sa.Float(), nullable=True),
    sa.Column('max_family_income', sa.Float(), nullable=True),
    sa.Column('income_currency', sa.String(length=3), nullable=True),
    sa.ForeignKeyConstraint(['scholarship_id'], ['scholarships.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('scholarship_id')
    )
    op.create_table('technologies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('domain_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('current_version', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('technologies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_technologies_domain_id'), ['domain_id'], unique=False)

    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('account', sa.String(length=10), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("account IN ('cash', 'card', 'savings')", name='check_transaction_account'),
    sa.CheckConstraint("type IN ('income', 'expense')", name='check_transaction_type'),
    sa.CheckConstraint('amount >= 0', name='check_transaction_amount_positive'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.create_index('idx_transaction_date', ['date'], unique=False)
        batch_op.create_index('idx_transaction_type', ['type'], unique=False)
        batch_op.create_index('idx_transaction_user', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_transactions_user_id'), ['user_id'], unique=False)

    op.create_table('user_badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('earned_at', sa.DateTime(), nullable=True),
    sa.Column('badge_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['badge_id'], ['badges.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_badges', schema=None) as batch_op:
        batch_op.create_index('idx_userbadge_badge', ['badge_id'], unique=False)
        batch_op.create_index('idx_userbadge_user', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_badges_badge_id'), ['badge_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_badges_user_id'), ['user_id'], unique=False)

    op.create_table('user_notification_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('learning_path_notifications', sa.Boolean(), nullable=True),
    sa.Column('delivery_method', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('user_points',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.CheckConstraint('points >= 0', name='check_points_positive'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('user_profiles',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('domain_id', sa.Integer(), nullable=False),
    sa.Column('current_level', sa.String(length=16), nullable=False),
    sa.Column('familiar_techs', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('daily_time', sa.Integer(), nullable=True),
    sa.Column('learning_pace', sa.String(length=10), nullable=False),
    sa.Column('auto_update_enabled', sa.Boolean(), nullable=True),
    sa.Column('update_frequency', sa.String(length=10), nullable=True),
    sa.Column('update_difficulty', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("current_level IN ('beginner', 'intermediate', 'advanced')", name='check_user_level'),
    sa.CheckConstraint("learning_pace IN ('slow', 'medium', 'fast')", name='check_learning_pace'),
    sa.CheckConstraint("update_difficulty IN ('easy', 'moderate', 'hard')", name='check_update_difficulty'),
    sa.CheckConstraint("update_frequency IN ('daily', 'weekly', 'monthly')", name='check_update_frequency'),
    sa.ForeignKeyConstraint(['domain_id'], ['domains.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    with op.batch_alter_table('user_profiles', schema=None) as batch_op:
        batch_op.create_index('idx_userprofile_domain', ['domain_id'], unique=False)
        batch_op.create_index('idx_userprofile_level', ['current_level'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_profiles_domain_id'), ['domain_id'], unique=False)

    op.create_table('user_saved_scholarships',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('scholarship_id', sa.String(length=36), nullable=False),
    sa.Column('saved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['scholarship_id'], ['scholarships.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'scholarship_id')
    )
    with op.batch_alter_table('user_saved_scholarships', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_saved_scholarships_saved_at'), ['saved_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_saved_scholarships_scholarship_id'), ['scholarship_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_saved_scholarships_user_id'), ['user_id'], unique=False)

    op.create_table('user_scholarship_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('branch', sa.String(length=64), nullable=True),
    sa.Column('current_year', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('skills', postgresql.ARRAY(sa.String(length=32)), nullable=True),
    sa.Column('preferred_countries', postgresql.ARRAY(sa.String(length=64)), nullable=True),
    sa.Column('preferred_types', postgresql.ARRAY(sa.String(length=32)), nullable=True),
    sa.Column('min_amount', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('path_modules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path_id', sa.Integer(), nullable=False),
    sa.Column('tech_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('estimated_time', sa.Integer(), nullable=True),
    sa.Column('tech_version', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['path_id'], ['learning_paths.id'], ),
    sa.ForeignKeyConstraint(['tech_id'], ['technologies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('path_modules', schema=None) as batch_op:
        batch_op.create_index('idx_pathmodule_path', ['path_id', 'order'], unique=False)
        batch_op.create_index(batch_op.f('ix_path_modules_path_id'), ['path_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_path_modules_tech_id'), ['tech_id'], unique=False)

    op.create_table('tech_updates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tech_id', sa.Integer(), nullable=False),
    sa.Column('old_version', sa.String(length=20), nullable=False),
    sa.Column('new_version', sa.String(length=20), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('changelog', sa.Text(), nullable=True),
    sa.Column('source_url', sa.String(length=512), nullable=True),
    sa.Column('is_major', sa.Boolean(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('impact_score', sa.Integer(), nullable=True),
    sa.Column('affected_domains', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('replacement_for_id', sa.Integer(), nullable=True),
    sa.Column('adoption_rate', sa.Float(), nullable=True),
    sa.Column('stability', sa.String(length=16), nullable=True),
    sa.Column('required_action', sa.String(length=16), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("required_action IN ('learn', 'migrate', 'optional')", name='check_required_action'),
    sa.CheckConstraint("stability IN ('experimental', 'beta', 'stable', 'deprecated')", name='check_stability'),
    sa.CheckConstraint('confidence_score >= 0 AND confidence_score <= 1', name='check_confidence_score'),
    sa.CheckConstraint('impact_score >= 1 AND impact_score <= 10', name='check_impact_score'),
    sa.ForeignKeyConstraint(['replacement_for_id'], ['technologies.id'], ),
    sa.ForeignKeyConstraint(['tech_id'], ['technologies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tech_updates', schema=None) as batch_op:
        batch_op.create_index('idx_techupdate_tech', ['tech_id'], unique=False)
        batch_op.create_index('idx_techupdate_version', ['new_version'], unique=False)
        batch_op.create_index(batch_op.f('ix_tech_updates_replacement_for_id'), ['replacement_for_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tech_updates_tech_id'), ['tech_id'], unique=False)

    op.create_table('forum_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['path_modules.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('forum_posts', schema=None) as batch_op:
        batch_op.create_index('idx_forumpost_module', ['module_id'], unique=False)
        batch_op.create_index('idx_forumpost_user', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_posts_module_id'), ['module_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_posts_user_id'), ['user_id'], unique=False)

    op.create_table('learning_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('github_template', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("type IN ('quiz', 'project', 'exercise')", name='check_activity_type'),
    sa.ForeignKeyConstraint(['module_id'], ['path_modules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('learning_activities', schema=None) as batch_op:
        batch_op.create_index('idx_activity_module', ['module_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_learning_activities_module_id'), ['module_id'], unique=False)

    op.create_table('module_resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('url', sa.String(length=512), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('difficulty', sa.String(length=16), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['path_modules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('module_resources', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_module_resources_module_id'), ['module_id'], unique=False)

    op.create_table('roadmap_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path_id', sa.Integer(), nullable=False),
    sa.Column('update_id', sa.Integer(), nullable=True),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['path_id'], ['learning_paths.id'], ),
    sa.ForeignKeyConstraint(['update_id'], ['tech_updates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('roadmap_versions', schema=None) as batch_op:
        batch_op.create_index('idx_roadmapversion_path', ['path_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_roadmap_versions_path_id'), ['path_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_roadmap_versions_update_id'), ['update_id'], unique=False)

    op.create_table('update_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('update_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='check_rating_range'),
    sa.ForeignKeyConstraint(['update_id'], ['tech_updates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('update_feedback', schema=None) as batch_op:
        batch_op.create_index('idx_feedback_user_update', ['user_id', 'update_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_update_feedback_update_id'), ['update_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_update_feedback_user_id'), ['user_id'], unique=False)

    op.create_table('activity_submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('submission_url', sa.String(length=512), nullable=True),
    sa.Column('answer_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("status IN ('not_started', 'in_progress', 'submitted', 'completed', 'graded')", name='check_submission_status'),
    sa.ForeignKeyConstraint(['activity_id'], ['learning_activities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('activity_submissions', schema=None) as batch_op:
        batch_op.create_index('idx_submission_user_activity', ['user_id', 'activity_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_submissions_activity_id'), ['activity_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_submissions_user_id'), ['user_id'], unique=False)

    op.create_table('forum_replies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['forum_posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('forum_replies', schema=None) as batch_op:
        batch_op.create_index('idx_forumreply_post', ['post_id'], unique=False)
        batch_op.create_index('idx_forumreply_user', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_replies_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_forum_replies_user_id'), ['user_id'], unique=False)

    op.create_table('user_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.String(length=36), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('completion_date', sa.DateTime(), nullable=True),
    sa.Column('version_id', sa.Integer(), nullable=True),
    sa.Column('migrated_to', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['migrated_to'], ['path_modules.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['path_modules.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['version_id'], ['roadmap_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_progress', schema=None) as batch_op:
        batch_op.create_index('idx_userprogress_status', ['status'], unique=False)
        batch_op.create_index('idx_userprogress_user_module', ['user_id', 'module_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_progress_migrated_to'), ['migrated_to'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_progress_module_id'), ['module_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_progress_profile_id'), ['profile_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_progress_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_progress_version_id'), ['version_id'], unique=False)

    op.create_table('versioned_modules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('original_module_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("status IN ('current', 'deprecated', 'new')", name='check_versioned_module_status'),
    sa.ForeignKeyConstraint(['original_module_id'], ['path_modules.id'], ),
    sa.ForeignKeyConstraint(['version_id'], ['roadmap_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('versioned_modules', schema=None) as batch_op:
        batch_op.create_index('idx_versionedmodule_version', ['version_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_versioned_modules_original_module_id'), ['original_module_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_versioned_modules_version_id'), ['version_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('versioned_modules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_versioned_modules_version_id'))
        batch_op.drop_index(batch_op.f('ix_versioned_modules_original_module_id'))
        batch_op.drop_index('idx_versionedmodule_version')

    op.drop_table('versioned_modules')
    with op.batch_alter_table('user_progress', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_progress_version_id'))
        batch_op.drop_index(batch_op.f('ix_user_progress_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_progress_profile_id'))
        batch_op.drop_index(batch_op.f('ix_user_progress_module_id'))
        batch_op.drop_index(batch_op.f('ix_user_progress_migrated_to'))
        batch_op.drop_index('idx_userprogress_user_module')
        batch_op.drop_index('idx_userprogress_status')

    op.drop_table('user_progress')
    with op.batch_alter_table('forum_replies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forum_replies_user_id'))
        batch_op.drop_index(batch_op.f('ix_forum_replies_post_id'))
        batch_op.drop_index('idx_forumreply_user')
        batch_op.drop_index('idx_forumreply_post')

    op.drop_table('forum_replies')
    with op.batch_alter_table('activity_submissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_activity_submissions_user_id'))
        batch_op.drop_index(batch_op.f('ix_activity_submissions_activity_id'))
        batch_op.drop_index('idx_submission_user_activity')

    op.drop_table('activity_submissions')
    with op.batch_alter_table('update_feedback', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_update_feedback_user_id'))
        batch_op.drop_index(batch_op.f('ix_update_feedback_update_id'))
        batch_op.drop_index('idx_feedback_user_update')

    op.drop_table('update_feedback')
    with op.batch_alter_table('roadmap_versions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roadmap_versions_update_id'))
        batch_op.drop_index(batch_op.f('ix_roadmap_versions_path_id'))
        batch_op.drop_index('idx_roadmapversion_path')

    op.drop_table('roadmap_versions')
    with op.batch_alter_table('module_resources', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_module_resources_module_id'))

    op.drop_table('module_resources')
    with op.batch_alter_table('learning_activities', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_learning_activities_module_id'))
        batch_op.drop_index('idx_activity_module')

    op.drop_table('learning_activities')
    with op.batch_alter_table('forum_posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_forum_posts_user_id'))
        batch_op.drop_index(batch_op.f('ix_forum_posts_module_id'))
        batch_op.drop_index('idx_forumpost_user')
        batch_op.drop_index('idx_forumpost_module')

    op.drop_table('forum_posts')
    with op.batch_alter_table('tech_updates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tech_updates_tech_id'))
        batch_op.drop_index(batch_op.f('ix_tech_updates_replacement_for_id'))
        batch_op.drop_index('idx_techupdate_version')
        batch_op.drop_index('idx_techupdate_tech')

    op.drop_table('tech_updates')
    with op.batch_alter_table('path_modules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_path_modules_tech_id'))
        batch_op.drop_index(batch_op.f('ix_path_modules_path_id'))
        batch_op.drop_index('idx_pathmodule_path')

    op.drop_table('path_modules')
    op.drop_table('user_scholarship_preferences')
    with op.batch_alter_table('user_saved_scholarships', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_saved_scholarships_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_saved_scholarships_scholarship_id'))
        batch_op.drop_index(batch_op.f('ix_user_saved_scholarships_saved_at'))

    op.drop_table('user_saved_scholarships')
    with op.batch_alter_table('user_profiles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_profiles_domain_id'))
        batch_op.drop_index('idx_userprofile_level')
        batch_op.drop_index('idx_userprofile_domain')

    op.drop_table('user_profiles')
    op.drop_table('user_points')
    op.drop_table('user_notification_preferences')
    with op.batch_alter_table('user_badges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_badges_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_badges_badge_id'))
        batch_op.drop_index('idx_userbadge_user')
        batch_op.drop_index('idx_userbadge_badge')

    op.drop_table('user_badges')
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transactions_user_id'))
        batch_op.drop_index('idx_transaction_user')
        batch_op.drop_index('idx_transaction_type')
        batch_op.drop_index('idx_transaction_date')

    op.drop_table('transactions')
    with op.batch_alter_table('technologies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_technologies_domain_id'))

    op.drop_table('technologies')
    op.drop_table('scholarship_criteria')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notifications_user_id'))
        batch_op.drop_index('idx_notification_user')
        batch_op.drop_index('idx_notification_read')
        batch_op.drop_index('idx_notification_feature')

    op.drop_table('notifications')
    with op.batch_alter_table('learning_paths', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_learning_paths_user_id'))
        batch_op.drop_index(batch_op.f('ix_learning_paths_domain_id'))

    op.drop_table('learning_paths')
    with op.batch_alter_table('finance_settings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_finance_settings_user_id'))

    op.drop_table('finance_settings')
    with op.batch_alter_table('budgets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_budgets_user_id'))
        batch_op.drop_index('idx_budget_user_month')

    op.drop_table('budgets')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('idx_user_email')

    op.drop_table('users')
    with op.batch_alter_table('scholarships', schema=None) as batch_op:
        batch_op.drop_index('idx_scholarship_years', postgresql_using='gin')
        batch_op.drop_index('idx_scholarship_skills', postgresql_using='gin')
        batch_op.drop_index('idx_scholarship_genders', postgresql_using='gin')
        batch_op.drop_index('idx_scholarship_deadline')
        batch_op.drop_index('idx_scholarship_branches', postgresql_using='gin')
        batch_op.drop_index('idx_scholarship_active')

    op.drop_table('scholarships')
    op.drop_table('domains')
    op.drop_table('badges')
    # ### end Alembic commands ###
